<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  	<display-name>JavaEE2</display-name>
  	<welcome-file-list>
	    <welcome-file>index.html</welcome-file>
	    <welcome-file>index.htm</welcome-file>
	    <welcome-file>index.jsp</welcome-file>
	    <welcome-file>default.html</welcome-file>
	    <welcome-file>default.htm</welcome-file>
	    <welcome-file>default.jsp</welcome-file>
  	</welcome-file-list>
  	<servlet>
	    <servlet-name>RestService</servlet-name>
	    <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
	    <init-param>
	      	<param-name>com.sun.jersey.config.property.packages</param-name>
	      	<param-value>org.langqiao.rest.service</param-value>
	    </init-param>
	    <load-on-startup>1</load-on-startup>
  	</servlet>
  	<servlet-mapping>
    	<servlet-name>RestService</servlet-name>
    	<url-pattern>/service/*</url-pattern>
  	</servlet-mapping>
  
  	<servlet>
    <servlet-name>timerServelt</servlet-name>
    <servlet-class>org.langqiao.servlet.TimerServlet</servlet-class>
    <init-param>
      	<param-name></param-name>
      	<param-value></param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  	</servlet>
  	
  	<servlet>
    	<description></description>
    	<display-name>GetServletParam</display-name>
    	<servlet-name>GetServletParam</servlet-name>
    	<servlet-class>org.langqiao.servlet.GetServletParam</servlet-class>
     	<init-param>
      		<param-name>encoding</param-name>
      		<param-value>utf-8</param-value>
    	</init-param>
  	</servlet>
  	<servlet-mapping>
    	<servlet-name>GetServletParam</servlet-name>
    	<url-pattern>/getServletParam</url-pattern>
  	</servlet-mapping>
  	<!-- 中文乱码过滤器 -->
  	<filter>
    	<filter-name>Encoding</filter-name>
    	<filter-class>org.langqiao.filter.SetCharacterEncodingFilter</filter-class>
    	<init-param>
      		<param-name>encoding</param-name>
      		<param-value>utf-8</param-value>
    	</init-param>
  	</filter>
  	<filter-mapping>
    	<filter-name>Encoding</filter-name>
    	<url-pattern>/*</url-pattern>
  	</filter-mapping>
  	<context-param>
    	<param-name>cityname</param-name>
    	<param-value>shanghai</param-value>
  	</context-param>
  	
  	
  	
  	<!-- ======================== 单点登录/登出 ======================== -->
	<!-- 该过滤器用于实现单点登出功能，可选配置。 -->
	<filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 该过滤器负责用户的认证工作，必须启用它 -->
	<filter>
		<filter-name>CAS Authentication Filter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>https://localhost:8443/cas/login</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://localhost:8080</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Authentication Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->
	<filter>
	<filter-name>CAS Validation Filter</filter-name>
		<filter-class>org.jasig.cas.client.validation.Cas10TicketValidationFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://localhost:8443/</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://localhost:8080</param-value>
			</init-param>
			<init-param>
			<param-name>redirectAfterValidation</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 该过滤器负责实现HttpServletRequest请求的包裹，
	比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。 -->
	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。
	比如AssertionHolder.getAssertion().getPrincipal().getName()。-->
	<filter>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>
	<!-- ======================== 单点登录/登出结束 ======================== -->
	
	<!-- struts2 support,定义strust2的核心拦截器 -->
	<filter>
		<filter-name>Struts2</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<!-- 让struts2的核心拦截器拦截所有的请求 -->
	<filter-mapping>
		<filter-name>Struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- end struts2 support -->
</web-app>